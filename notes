Server creation = nodejs + express          
------------------------------------------------------

Basic commands
----------------------

1)Creation of package.json - init
2)Creation of node modules - npm i express (Installing of express)


Basic steps
----------------
1)crating a folder (BankServer)
2)Create package.json
3)Instal express
4)Create index.js
5)Import express inside the index.js
6)Create an app using the express
7)setup port number
8)Resolving HTTP Request


    Get - to get the data
    Post - to Post the data
    Put - update data partially
    Patch - update the data completely
    Delete - Delete the data completely

9)HTTP Response Code
    1xx - Information
    2xx - successful
    3xx - redirection
    4xx - Client Error
    5xx - Server Error


10)JWT Token - Authentication 
        to check login or not
    --login ----- token genarate ----> client -- req to deposit+token ---> server token check?    
    install -- npm i jsonwebtoken
    -To genarate a token - sign()


11)middleware -- To verify token
    it comes the middle of the request and response cycle of the node js execution process
        1)Application specific middleware  - for entire application
        req,res,next
        2)Router specific middleware - validate token - validate() -

12)DataBase Integration
    1)install mongose - npm i mongoose(for connecting node.js and mongodb)
    
13)Asynchronous function resolving - promise 

    1)Resolve state - .then()
    2)Reject state - catch()

14)CORS - cross Origin Resorce sharing
 
    install Cors- npm i cors    
    port 4200 (anngular)-----request -----> 3000(node)(recieve)

15)Asynchronous call - Rxjs -(Reactive Extension for javascript)

JS - promise
TS - RxJs(library)

    1)Observable
        a)resolved - Subscribe()
        b)reject - catch



16 Data base commands
show dbs
use dbName
insertOne, insertMany     c   ---db.students.insertOne({acno:1002,password:1002,username:"jini",salary:6000})
findOne(), find()         r ---db.students.findOne({acno:1000}))
updateOne(), updateMany() u ------- db.students.updateOne({username:"jabir"},{$set:{username:"amal kumar"}})
deleteOne(), deleteMany() d   --db.students.deleteOne({acno:1000})

db.students.find({salary:{$gt:5000}}) finds > 5000